name: CI

on: push

env:
  PYTHON_VERSION: 3.9

jobs:
  # -----
  # Setup
  # -----

  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{env.PYTHON_VERSION}}
      - name: Install Poetry
        uses: snok/install-poetry@v1.1.2
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2.1.4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

  # -------
  # Linting
  # -------

  lint-black:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{env.PYTHON_VERSION}}
      - name: Load cached venv
        uses: actions/cache@v2.1.4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Run black
        run: |
           . .venv/bin/activate
           invoke lint-black

  lint-flake8:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{env.PYTHON_VERSION}}
      - name: Load cached venv
        uses: actions/cache@v2.1.4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Run flake8
        run: |
          . .venv/bin/activate
          invoke lint-flake8

  lint-isort:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{env.PYTHON_VERSION}}
      - name: Load cached venv
        uses: actions/cache@v2.1.4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Run isort
        run: |
          . .venv/bin/activate
          invoke lint-isort

  lint-mypy:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{env.PYTHON_VERSION}}
      - name: Load cached venv
        uses: actions/cache@v2.1.4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Run mypy
        run: |
          . .venv/bin/activate
          invoke lint-mypy

  # -------
  # Testing
  # -------

  test-unit:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{env.PYTHON_VERSION}}
      - name: Load cached venv
        uses: actions/cache@v2.1.4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Run unit tests
        run: |
          . .venv/bin/activate
          invoke test-unit

  test-integration:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{env.PYTHON_VERSION}}
      - name: Load cached venv
        uses: actions/cache@v2.1.4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Run integration tests
        run: |
          . .venv/bin/activate
          invoke test-integration

  test-functional:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{env.PYTHON_VERSION}}
      - name: Load cached venv
        uses: actions/cache@v2.1.4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Run functional tests
        run: |
          . .venv/bin/activate
          invoke test-functional

  # -----
  # Build
  # -----

  build-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: docker/build-push-action@v2
        id: docker_build

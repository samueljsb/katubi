name: CI/CD

on: push

env:
  PYTHON_VERSION: 3.9

jobs:
  # -----
  # Setup
  # -----

  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{env.PYTHON_VERSION}}
      - name: Install Poetry
        uses: snok/install-poetry@v1.2
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2.1.6
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

  # -------
  # Linting
  # -------

  lint-black:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{env.PYTHON_VERSION}}
      - name: Load cached venv
        uses: actions/cache@v2.1.6
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Run black
        run: |
           . .venv/bin/activate
           invoke lint-black

  lint-flake8:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{env.PYTHON_VERSION}}
      - name: Load cached venv
        uses: actions/cache@v2.1.6
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Run flake8
        run: |
          . .venv/bin/activate
          invoke lint-flake8

  lint-isort:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{env.PYTHON_VERSION}}
      - name: Load cached venv
        uses: actions/cache@v2.1.6
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Run isort
        run: |
          . .venv/bin/activate
          invoke lint-isort

  lint-mypy:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{env.PYTHON_VERSION}}
      - name: Load cached venv
        uses: actions/cache@v2.1.6
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Run mypy
        run: |
          . .venv/bin/activate
          invoke lint-mypy

  lint-bandit:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{env.PYTHON_VERSION}}
      - name: Load cached venv
        uses: actions/cache@v2.1.6
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Run bandit
        run: |
          . .venv/bin/activate
          invoke lint-bandit

  lint-django-doctor:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{env.PYTHON_VERSION}}
      - name: Load cached venv
        uses: actions/cache@v2.1.6
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Run Django Doctor
        run: |
          . .venv/bin/activate
          invoke lint-django-doctor

  # -------
  # Testing
  # -------

  test-unit:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{env.PYTHON_VERSION}}
      - name: Load cached venv
        uses: actions/cache@v2.1.6
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Run unit tests
        run: |
          . .venv/bin/activate
          invoke test-unit

  test-integration:
    runs-on: ubuntu-latest
    needs: setup
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - "5432:5432"
    env:
      DB_NAME: postgres
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: localhost
      DB_PORT: "5432"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{env.PYTHON_VERSION}}
      - name: Load cached venv
        uses: actions/cache@v2.1.6
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Run integration tests
        run: |
          . .venv/bin/activate
          invoke test-integration

  test-functional:
    runs-on: ubuntu-latest
    needs: setup
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - "5432:5432"
    env:
      DB_NAME: postgres
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: localhost
      DB_PORT: "5432"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{env.PYTHON_VERSION}}
      - name: Load cached venv
        uses: actions/cache@v2.1.6
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Run functional tests
        run: |
          . .venv/bin/activate
          invoke test-functional
